@startuml
class Object
abstract class AbstractMarker
abstract class CommonMarker{
public CommonMarker(Location location)
public CommonMarker(Location location, java.util.HashMap<java.lang.String,java.lang.Object> properties)
boolean getClicked()
void setClicked(boolean state)
void draw(PGraphics pg, float x, float y)
abstract void drawMarker(PGraphics pg, float x, float y)
abstract void showTitle(PGraphics pg, float x, float y)
}

class SimplePointMarker

class CityMarker{
public CityMarker(Location location)
void draw(PGraphics pg, float x, float y)
String getCity()
String getCountry()
float getPopulation()
void drawMarker(PGraphics pg, float x, float y)
void showTitle(PGraphics pg, float x, float y)
}

abstract class EarthquakeMarker{
abstract void drawEarthquake(PGraphics pg, float x, float y)
void draw(PGraphics pg, float x, float y)
void colorDetermine(PGraphics pg)
 float getMagnitude()
 float getDepth()
 String getTitle()
 float getRadius()
 boolean isOnLand()
 void drawMarker(PGraphics pg, float x, float y)
 void showTitle(PGraphics pg, float x, float y)
}

class LandQuakeMarker{
void drawEarthquake(PGraphics pg, float x, float y)
String getCountry()

}
class OceanQuakeMarker{
void drawEarthquake(PGraphics pg, float x, float y)
}


class EarthquakeCityMap{
void setup()
void addKey
void draw()
boolean isLand(PointFeature earthquake)
void printQuakes()
boolean isInCountry(PointFeature earthquake, Marker country)
void mouseMoved()
void mouseClicked()
void selectMarkerIfHover(List<Marker> markers)
void unhideMarkers()
}
CommonMarker <-- SimplePointMarker
SimplePointMarker <--AbstractMarker
CityMarker <-- CommonMarker
EarthquakeMarker <-- CommonMarker
LandQuakeMarker <-- EarthquakeMarker
OceanQuakeMarker <-- EarthquakeMarker
EarthquakeCityMap <-- PApplet
AbstractMarker <--Object

@enduml
